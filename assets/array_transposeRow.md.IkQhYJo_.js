import{_ as s,c as i,o as a,U as t}from"./chunks/framework.WU9gZgzV.js";const c=JSON.parse('{"title":"transposeRow","description":"","frontmatter":{},"headers":[],"relativePath":"array/transposeRow.md","filePath":"array/transposeRow.md"}'),n={name:"array/transposeRow.md"},o=t(`<h1 id="transposerow" tabindex="-1">transposeRow <a class="header-anchor" href="#transposerow" aria-label="Permalink to &quot;transposeRow&quot;">​</a></h1><p>1차원 행[]을 2차원 행열[][]로 바꿉니다. 원본 컬럼을 그대로 사용합니다.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [{id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;B&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transposeRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//    [{&quot;id&quot;:1,&quot;name&quot;:&quot;A&quot;}, {&quot;id&quot;:2,&quot;name&quot;:&quot;B&quot;}, {&quot;id&quot;:3,&quot;name&quot;:&quot;C&quot;}],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//    [{&quot;id&quot;:1,&quot;name&quot;:&quot;A&quot;}, {&quot;id&quot;:2,&quot;name&quot;:&quot;B&quot;}, {&quot;id&quot;:3,&quot;name&quot;:&quot;C&quot;}],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//    [{&quot;id&quot;:1,&quot;name&quot;:&quot;A&quot;}, {&quot;id&quot;:2,&quot;name&quot;:&quot;B&quot;}, {&quot;id&quot;:3,&quot;name&quot;:&quot;C&quot;}]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  ]</span></span></code></pre></div>`,3),e=[o];function p(h,l,k,r,u,d){return a(),i("div",null,e)}const E=s(n,[["render",p]]);export{c as __pageData,E as default};
