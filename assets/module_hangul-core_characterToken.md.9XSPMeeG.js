import{_ as s,c as a,o as i,U as t}from"./chunks/framework.WU9gZgzV.js";const E=JSON.parse('{"title":"hangul-core","description":"","frontmatter":{},"headers":[],"relativePath":"module/hangul-core/characterToken.md","filePath":"module/hangul-core/characterToken.md"}'),e={name:"module/hangul-core/characterToken.md"},n=t(`<h1 id="hangul-core" tabindex="-1">hangul-core <a class="header-anchor" href="#hangul-core" aria-label="Permalink to &quot;hangul-core&quot;">​</a></h1><h2 id="charactertoken" tabindex="-1">characterToken <a class="header-anchor" href="#charactertoken" aria-label="Permalink to &quot;characterToken&quot;">​</a></h2><p>초/중/종성을 분리한다.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">characterToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;푸&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ &quot;ㅍ&quot;, &quot;ㅜ&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">characterToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;밟&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ &quot;ㅂ&quot;, &quot;ㅏ&quot;, &quot;ㄼ&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">characterToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;꿍&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ &quot;ㄲ&quot;, &quot;ㅜ&quot;, &quot;ㅇ&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">characterToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;의&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ &quot;ㅇ&quot;, &quot;ㅢ&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">characterToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;왜&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ &quot;ㅇ&quot;, &quot;ㅙ&quot; ]</span></span></code></pre></div>`,4),h=[n];function l(k,r,o,p,c,d){return i(),a("div",null,h)}const g=s(e,[["render",l]]);export{E as __pageData,g as default};
