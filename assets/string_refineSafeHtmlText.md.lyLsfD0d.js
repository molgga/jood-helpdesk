import{_ as t,c as e,o as s,U as i}from"./chunks/framework.WU9gZgzV.js";const g=JSON.parse('{"title":"refineSafeHtmlText","description":"","frontmatter":{},"headers":[],"relativePath":"string/refineSafeHtmlText.md","filePath":"string/refineSafeHtmlText.md"}'),a={name:"string/refineSafeHtmlText.md"},n=i('<h1 id="refinesafehtmltext" tabindex="-1">refineSafeHtmlText <a class="header-anchor" href="#refinesafehtmltext" aria-label="Permalink to &quot;refineSafeHtmlText&quot;">​</a></h1><p>엔티티 코드를 html 태그 문자열로 변경합니다.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refineSafeHtmlText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(소스 문자열, [탭 문자를 제거할지 여부 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refineSafeHtmlText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&amp;lt;div&amp;gt;1&amp;lt;/div&amp;gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;&lt;div&gt;1&lt;/div&gt;&quot;</span></span></code></pre></div>',4),l=[n];function p(h,r,d,o,c,k){return s(),e("div",null,l)}const m=t(a,[["render",p]]);export{g as __pageData,m as default};
